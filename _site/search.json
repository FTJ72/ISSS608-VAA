[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "",
    "text": "This take-home exercise is meant to be a practice of peer review. The task is to critique a submission made by a classmate by giving comments on the clarity and aesthetics of their graphs. The design is then to be remade using the comments made in order to create a new graph that addresses the concerns raised."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#academic-performance",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#academic-performance",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.1: Academic Performance",
    "text": "3.1: Academic Performance\nThe current version of the graph shows academic performance as seen below.\n\nMathematicsReadingScience\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Math_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x = \"Math Scores\",\n       y =\"Number of Students\",\n       title= \"Distribution of Student Math Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Math_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=675, \n           y=60, \n          label= paste(\"Median =\", round(median(stu_qqq_eda$Math_Score, na.rm = T), 3)), \n           color= \"white\", \n           size=4,\n           ) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Math_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=495,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Math_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Reading_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Reading Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Reading Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Reading_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=650, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Reading_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Reading_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=460,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Reading_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Science_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Science Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Science Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Science_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=659, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Science_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Science_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=480,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Science_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\nCritique\nClarity:\n\nPer graph, the bin width is not set to a specific value. This makes it difficult to understand the ranges within each of the bars of the histogram. In addition, the true shape of the data cannot be seen in this style and is heavily influenced by the number of bins available.\nGiven that 3 different items are being observed (Mathematics, Reading, and Science), the scale of the x and y axes should be consistent between each graph in order to more clearly see differences between each subject in terms of student performance.\n\nAesthetics:\n\nThe label for the mean is being obscured by the black lines of the histogram. It can be moved higher in the graph to prevent the lines from obscuring the letters.\nMedian being written in white makes it difficult to read, changing it to a darker color could help it be more readable to viewers.\nThe gray background contrasts with the white background of the website.\n\n\n\nRecreation\n\nMathematicsReadingScience\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Math_Score)) +\n  geom_histogram(binwidth = 20,\n                 color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x = \"Math Scores\",\n       y =\"Number of Students\",\n       title= \"Distribution of Student Math Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Math_Score, na.rm = T)), \n             color=\"#008000\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=700, \n           y=550, \n          label= paste(\"Median =\", round(median(stu_qqq_eda$Math_Score, na.rm = T), 3)), \n           color= \"#008000\", \n           size=4,\n           ) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Math_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=450,\n           y=550,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Math_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme_hc() +\n  scale_x_continuous(breaks = seq(100, 1000, 100)) +\n  scale_y_continuous(breaks = seq(0, 550, 100)) +\n  coord_cartesian(xlim = c(100, 1000), ylim = c(0, 550))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Reading_Score)) +\n  geom_histogram(binwidth = 20,,\n                 color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Reading Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Reading Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Reading_Score, na.rm = T)), \n             color=\"#008000\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=680, \n           y=550, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Reading_Score, na.rm = T), 3)), \n           color= \"#008000\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Reading_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=430,\n           y=550,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Reading_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme_hc() +\n  scale_x_continuous(breaks = seq(100, 1000, 100)) +\n  scale_y_continuous(breaks = seq(0, 550, 100)) +\n  coord_cartesian(xlim = c(100, 1000), ylim = c(0, 550))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Science_Score)) +\n  geom_histogram(binwidth = 20,,\n                 color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Science Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Science Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Science_Score, na.rm = T)), \n             color=\"#008000\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=700, \n           y=550, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Science_Score, na.rm = T), 3)), \n           color= \"#008000\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Science_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=450,\n           y=550,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Science_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme_hc() +\n  scale_x_continuous(breaks = seq(100, 1000, 100)) +\n  scale_y_continuous(breaks = seq(0, 550, 100)) +\n  coord_cartesian(xlim = c(100, 1000), ylim = c(0, 550))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChanges\nClarity:\n\nA fixed bin size of 20 was set for all graphs. This is to ensure that the bins per graph are uniform for easier interpretation by viewers.\nThe size of the x axis was set to 100-1000 based off of the lowest and highest values found in all of the datasets. This allows the bins to be consistent in the numbers that they represent and for the differences between each subject’s scores to be more evident.\nThe y axis was changed to a scale of 0-550 based off of the highest frequency found in the dataset per bin.\n\nAesthetics:\n\nThe label for the mean was moved higher to no longer be obscured by the graph.\nThe color of the median was changed into a dark green color to better match the color theme of the website.\nThe gray background has been switched to a white background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-average-score-per-school",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-average-score-per-school",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.1: Distribution of Average Score per School",
    "text": "3.1: Distribution of Average Score per School\nThe next graph to observe is that of the box plot representing the distribution of the average scores of the students within each school per subject.\n\n\nShow code\nstu_sch &lt;- stu_qqq_eda %&gt;%\n  group_by(School_ID) %&gt;%\n  mutate(math_avg = mean(Math_Score),\n         science_avg = mean(Science_Score),\n         reading_avg = mean(Reading_Score)) %&gt;%\n  select(School_ID, math_avg, science_avg, reading_avg) %&gt;%\n  unique() \n\nsch_math &lt;- ggplot(data=stu_sch,\n       aes(y = math_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",\n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Math Average\", title = \"\")\n\nsch_read &lt;- ggplot(data=stu_sch,\n       aes(y = reading_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\", \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Reading Average\", title = \"\")\n\nsch_sci &lt;- ggplot(data=stu_sch,\n       aes(y = science_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",  \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1)) +\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Science Average\", title = \"\")\n\nsch_math + sch_read + sch_sci\n\n\n\n\n\n\n\n\n\n\nCritique\nClarity\n\nSimilar to the previous graph, given that 3 different subjects are being compared, keeping a similar scale between all the graphs could help in seeing which subjects have the greatest disparities between one another in terms of average student grades.\nThe y-axis label could be improved by specifying that the measurement is per school.\n\nAesthetics\n\nThe diamond to represent the mean of the data could be darkened to help its visibility to the reader.\nSimilar to the previous graph, the gray background could be switched to match the white background of the website itself.\n\n\n\nRecreation\n\n\nShow code\nstu_sch &lt;- stu_qqq_eda %&gt;%\n  group_by(School_ID) %&gt;%\n  mutate(math_avg = mean(Math_Score),\n         science_avg = mean(Science_Score),\n         reading_avg = mean(Reading_Score)) %&gt;%\n  select(School_ID, math_avg, science_avg, reading_avg) %&gt;%\n  unique() \n\nsch_math &lt;- ggplot(data=stu_sch,\n       aes(y = math_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",\n               shape = 18,\n               colour = \"#137a63\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Average Student Math Score of School\", title = \"\")+\n  coord_cartesian(ylim = c(300, 750))+\n  theme_hc() \n\nsch_read &lt;- ggplot(data=stu_sch,\n       aes(y = reading_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\", \n               shape = 18,\n               colour = \"#137a63\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Average Student Reading Score of School\", title = \"\")+\n  coord_cartesian(ylim = c(300, 750))+\n  theme_hc() \n\nsch_sci &lt;- ggplot(data=stu_sch,\n       aes(y = science_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",  \n               shape = 18,\n               colour = \"#137a63\", \n               size = 3.5) +\n  xlim(c(-.1,.1)) +\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Average Student Science Score of School\", title = \"\")+\n  coord_cartesian(ylim = c(300, 750))+\n  theme_hc() \n\nsch_math + sch_read + sch_sci\n\n\n\n\n\n\n\n\n\n\n\nChanges\nClarity\n\nThe x and y scales were adjusted to be uniform and based on the highest and lowest values found for each axis from the data.\nThe y-axis label clarifies that the score is per school.\n\nAesthetics\n\nThe diamond to represent the mean of the data has been darkened to help its visibility to the reader.\nThe gray background has been switched to a white background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#differences-in-student-performance-among-genders",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#differences-in-student-performance-among-genders",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.3 Differences in Student Performance Among Genders",
    "text": "3.3 Differences in Student Performance Among Genders\nThe following graph is meant to show the differences between subject performance between the genders of the students.\n\n\nShow code\ngender_math &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Math_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", y = \"Score\", title = \"Mathematics\", axis.title.y = element_blank())\n\ngender_read &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Reading_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Reading\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_sci &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Science_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Science\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_math + gender_read + gender_sci\n\n\n\n\n\n\n\n\n\n\nCritique\nClarity\n\nLooking at the size of the graphs, a closer view of the ranges could be done by decreasing the y range of the graphs from 0-1000 to 100-1000. This allows the shapes of the box plots to be more pronounced in order to show the differences between scores.\nGiven that male and female students are being compared, adding a notch to the box plots would allow for a clearer observation of significant differences between the genders by showing the 95% confidence interval between the genders.\n\nAesthetics\n\nGiven that the previous graph was also a box plot, the sudden inclusion of filling the graph in with the color green is inconsistent with the previous style of the box plot.\nThe change of the colors for outliers and the mean compared to the last graph is also inconsistent with the pre-established format.\n\n\n\nRecreation\n\n\nShow code\ngender_math &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Math_Score)) +\n  geom_boxplot(outlier.colour = \"#137a63\",\n               notch=TRUE) +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",\n             shape = 18,\n             colour =\"#137a63\",          \n             size=3) +\n  coord_cartesian(ylim = c(100, 1000))+\n  labs(x = \"\", y = \"Score\", title = \"Mathematics\", axis.title.y = element_blank())+\n  theme_hc()+\n  scale_y_continuous(breaks = seq(100, 1000, by = 100))\n\ngender_read &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Reading_Score)) +\n  geom_boxplot(outlier.colour = \"#137a63\",\n               notch=TRUE) +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",\n             shape = 18,\n             colour =\"#137a63\",          \n             size=3) +\n  coord_cartesian(ylim = c(100, 1000))+\n  labs(x = \"\", title = \"Reading\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())+\n  theme_hc()+\n  scale_y_continuous(breaks = seq(100, 1000, by = 100))\n\ngender_sci &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Science_Score)) +\n  geom_boxplot(outlier.colour = \"#137a63\",\n               notch=TRUE) +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",\n             shape = 18,\n             colour =\"#137a63\",          \n             size=3) +\n  coord_cartesian(ylim = c(100, 1000))+\n  labs(x = \"\", title = \"Science\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())+\n  theme_hc()+\n  scale_y_continuous(breaks = seq(100, 1000, by = 100))\n\ngender_math + gender_read + gender_sci\n\n\n\n\n\n\n\n\n\n\n\nChanges\nClarity\n\nThe y range of the graphs has been changed from 0-1000 to 100-1000. This allows the shapes of the box plots to be more pronounced in order to show the differences between scores.\nA notch to the box plots was added to show the 95% confidence interval between the genders.\n\nAesthetics\n\nThe green fill of the box plot was removed to maintain uniformity with the previous box plot.\nThe colors of the outliers has been changed to match the previous box plot.\nThe color and shape of the mean has been changed to match the previous box plot.\nThe gray background has been changed to match the website’s background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#socioeconomic-status",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.4 Socioeconomic Status",
    "text": "3.4 Socioeconomic Status\nThe following graph shows the correlation between a student’s Socioeconomic Status and their grades.\n\n\nShow code\ncor1 &lt;- round(cor(stu_qqq_socio$Math_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor2 &lt;- round(cor(stu_qqq_socio$Reading_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor3 &lt;- round(cor(stu_qqq_socio$Science_Score, stu_qqq_socio$Socioeconomic_Stat),2)\n\np1 &lt;- ggplot(data = stu_qqq_socio,\n             aes(y = Math_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\") +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor1), color = 'black')\n\np2 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Reading_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") + \n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor2), color = 'black')\n\np3 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Science_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor3), color = 'black')\n\np1/p2/p3\n\n\n\n\n\n\n\n\n\n\nCritique\nClarity\n\nObserving the graphs, the compression of the values into a very narrow space exaggerates the correlation of the student’s socioeconomic status and their grades. The r value is at 0.41-0.42 and yet the graphs show a very clear upward trend. Enlarging the space for the y-axis should provide the viewer with a clearer understanding of the correlation.\nThe scales of the 3 graphs are also inconsistent. Adding a uniform scale could help in comparing the data from one to the other.\nA title to the graphs could be added to make the information being presented clearer.\n\nAesthetics\n\nThe labels of the x and y axis contain underscores, these could be removed.\nThe gray background could be changed to match the website’s white background.\n\n\n\nRecreation\n\nMathReadingScience\n\n\n\n\nShow code\nggplot(data = stu_qqq_socio,\n             aes(y = Math_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\") +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor1), color = 'black')+\n  labs(x = \"Socioeconomic Score\", y = \"Math Score\")+\n  ggtitle(\"Math Score by Socioeconomic Status\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data = stu_qqq_socio,\n       aes(y = Reading_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") + \n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor2), color = 'black')+\n  labs(x = \"Socioeconomic Score\", y = \"Math Score\")+\n  ggtitle(\"Reading Score by Socioeconomic Status\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data = stu_qqq_socio,\n       aes(y = Science_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor3), color = 'black')+\n  labs(x = \"Socioeconomic Score\", y = \"Math Score\")+\n  ggtitle(\"Science Score by Socioeconomic Status\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChanges\nClarity\n\nThe graphs has been split into 3 tabs to allow each graph to clearly show the spread of the points.\nThe graph scales have all been made uniform to help see differences between one graph to the other.\nA title to the graphs has been added to make the information being presented clearer.\n\nAesthetics\n\nThe labels of the x and y axis have been changed.\nThe gray background was changed to match the website’s white background."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 VAA"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "For this exercise, the following R packages will be used:\n\ntidyverse, a family of R packages for data science process.\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots.\nggdist for visualising distribution and uncertainty.\nggstatsplot package to create visual graphics with rich statistical information.\nperformance package to visualise model diagnostics.\nparameters package to visualise model parameters.\nplotly for creating interactive plot.\ngganimate for creating animation plot.\nDT for displaying interactive html table.\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering).\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse, ggstatsplot, rstantools, readxl, performance, parameters, see, ungeviz, plotly, crosstalk, DT, gganimate, FunnelPlotR, knitr)\n\n\n\n\nOnce again, Exam_data.csv will be utilized for the exercise.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nOnce these steps are completed, the exercise may begin."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-packages",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "For this exercise, the following R packages will be used:\n\ntidyverse, a family of R packages for data science process.\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots.\nggdist for visualising distribution and uncertainty.\nggstatsplot package to create visual graphics with rich statistical information.\nperformance package to visualise model diagnostics.\nparameters package to visualise model parameters.\nplotly for creating interactive plot.\ngganimate for creating animation plot.\nDT for displaying interactive html table.\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering).\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse, ggstatsplot, rstantools, readxl, performance, parameters, see, ungeviz, plotly, crosstalk, DT, gganimate, FunnelPlotR, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Once again, Exam_data.csv will be utilized for the exercise.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nOnce these steps are completed, the exercise may begin."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plot",
    "title": "Hands-on Exercise 4",
    "section": "Ridgeline Plot",
    "text": "Ridgeline Plot\nRidgeline plots show a dataset’s distribution of numeric values. There are many options as to how these can be visualized.\n\nColor GradientProbability per Category (Section)Quantile RangesQuantile with Cut Points\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "Raincloud Plot",
    "text": "Raincloud Plot\nRaincloud is a similar visualization technique to that of the boxplot. However, this method allows viewers to gain a clearer view of the dataset by showing areas where densities are clustered. However, a rancloud may be combined with a boxplot and a half-dotplot in order to show a clearer view of the data.\n\nLone RaincloudRaincloud + Boxplot + Half-dot\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test",
    "title": "Hands-on Exercise 4",
    "section": "One-sample Test",
    "text": "One-sample Test\nThe code chunk below is used to build a one-sample test on the different test scores\n\nEnglishMathScience\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = MATHS,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"Math scores\"\n)\n\n\n\n\n\n\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = SCIENCE,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"Science scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample Mean Test",
    "text": "Two-sample Mean Test\nThe code chunk below builds a visual two-sample mean test for each subject score by gender.\n\nEnglishMathSicence\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = ENGLISH,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = SCIENCE,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-way-anova-test",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-way-anova-test",
    "title": "Hands-on Exercise 4",
    "section": "One-way ANOVA Test",
    "text": "One-way ANOVA Test\nThe code chunk below builds a One-way ANOVA test for the subject scores by race.\n\nEnglishMathScience\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = MATHS,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = SCIENCE,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Correlation",
    "text": "Significant Test of Correlation\nThe code chunk below can be used to create a Significant Test of Correlation between the scores per subject.\n\nEnglish-MathEnglish-ScienceMath-Science\n\n\n\nggscatterstats(\n  data = exam,\n  x = ENGLISH,\n  y = MATHS,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = ENGLISH,\n  y = SCIENCE,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = SCIENCE,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Association",
    "text": "Significant Test of Association\nThe code chunk below bins the Math scores into 4-class variables and then builds a visual for Significant Test of Association\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-regression-parameters",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-regression-parameters",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing Regression Parameters",
    "text": "Visualizing Regression Parameters\nThere are 2 options to visualize the parameters of a regression model.\n\nOption 1Option 2\n\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Exercise 2",
    "section": "",
    "text": "Loading the packages:\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#graphing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#graphing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Warning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Part 1: Interactive Data Visualization\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPart 2: Animated Statistical Graphics\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(col, as.factor)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(col)\n\n  # Now:\n  data %&gt;% select(all_of(col))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7):\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)\n\n##Importing PISA Data\nThe code chunk below uses ‘read_sas()’ of haven to import PISA data into the R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)\n\n##Importing PISA Data\nThe code chunk below uses ‘read_sas()’ of haven to import PISA data into the R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1: Creating Data Visualization Beyond Default",
    "section": "",
    "text": "Although Singapore has reportedly achieved a high level of education between all schools in the country, there remains a strong belief within the country that disparities still exist within the educational system. Differing factors such as being an elite or neighborhood school, socioeconomic status, gender, and many other factors may still play a vital role in a student’s educational quality."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "title": "Take-home Exercise 1: Creating Data Visualization Beyond Default",
    "section": "1.1: Installing R Packages",
    "text": "1.1: Installing R Packages\nIn this task, three R packages will be used. They are:\n\ntidyverse,\nhaven, and\nggplot2\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven,ggplot2,patchwork,ggrepel,ggthemes,hrbrthemes)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "title": "Take-home Exercise 1: Creating Data Visualization Beyond Default",
    "section": "1.2: Data Sets",
    "text": "1.2: Data Sets\nThe code chunk below uses ‘read_sas()’ of haven to import the PISA data into the R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nThe data can then be limited to contain only Singaporean students using the following code chunks.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\n\nGiven that the data was restricted to only Singaporean students, numerous columns have uniform values. These columns do not provide any useful information to the task at hand and can thus be filtered out using the code chunks below.\n\nlibrary(dplyr)\nstu_qqq_SG_filtered &lt;- stu_qqq_SG %&gt;%\n  select_if(function(x) !all(x == x[1]))\n\n\nwrite_rds(stu_qqq_SG_filtered,\n          \"data/stu_qqq_SG_filtered.rds\")\n\n\nstu_qqq_SG_filtered &lt;- read_rds(\"data/stu_qqq_SG_filtered.rds\")\n\nThis provides a data set called “stu_qqq_SG_filtered” which contains the information from PISA regarding Singaporean students and all answers wherein unique values were placed by said students.\n\n1.2.1: Data Wrangling\nThere are multiple Plausible Values (PV) provided for the subjects of Math, Reading and Science. The mean of the PVs can be used to obtain an estimate for the student’s performance in the respective subjects.\nThe code chunk below is used to obtain the means of the data:\n\nstu_qqq_SG_filtered &lt;- stu_qqq_SG_filtered %&gt;%\n  mutate(\n    MATH_Score = rowMeans(select(., PV1MATH:PV10MATH), na.rm = TRUE),\n    READ_Score = rowMeans(select(., PV1READ:PV10READ), na.rm = TRUE),\n    SCIE_Score = rowMeans(select(., PV1SCIE:PV10SCIE), na.rm = TRUE)\n  )\n\nObserving the question for gender, responses are written in the form of 1 (Female), and 2 (Male). A new column called “Gender” can be created which converts the numeric values to their respective text responses using the code chunk below:\n\nstu_qqq_SG_filtered &lt;- stu_qqq_SG_filtered %&gt;%\n  mutate(Gender = ifelse(ST004D01T == 1, \"Female\", \"Male\"))\n\nThe schools are currently seen as numbers, these must be converted into characters using the following code chunk:\n\nstu_qqq_SG_filtered &lt;- stu_qqq_SG_filtered %&gt;%\n  mutate(CNTSCHID = as.character(CNTSCHID))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-data",
    "title": "Take-home Exercise 1: Creating Data Visualization Beyond Default",
    "section": "1.2.1: Summary Statistics of Data",
    "text": "1.2.1: Summary Statistics of Data\nThe following code chunk checks if there is any duplicate data found within the data set.\n\nstu_qqq_SG_filtered[duplicated(stu_qqq_SG_filtered),]\n\n# A tibble: 0 × 639\n# ℹ 639 variables: CNTSCHID &lt;chr&gt;, CNTSTUID &lt;dbl&gt;, STRATUM &lt;chr&gt;, BOOKID &lt;dbl&gt;,\n#   ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;,\n#   ST250Q02JA &lt;dbl&gt;, ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;,\n#   ST250D06JA &lt;chr&gt;, ST250D07JA &lt;chr&gt;, ST251Q01JA &lt;dbl&gt;, ST251Q02JA &lt;dbl&gt;,\n#   ST251Q03JA &lt;dbl&gt;, ST251Q04JA &lt;dbl&gt;, ST251Q06JA &lt;dbl&gt;, ST251Q07JA &lt;dbl&gt;,\n#   ST253Q01JA &lt;dbl&gt;, ST254Q01JA &lt;dbl&gt;, ST254Q02JA &lt;dbl&gt;, ST254Q03JA &lt;dbl&gt;,\n#   ST254Q04JA &lt;dbl&gt;, ST254Q05JA &lt;dbl&gt;, ST254Q06JA &lt;dbl&gt;, ST255Q01JA &lt;dbl&gt;, …\n\n\n\nData Visualization\nBelow is an overview of the scores of the students from each subject area.\n\nMathReadingScience\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = 1, y = MATH_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Math Scores\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = 1, y = READ_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Reading Scores\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = 1, y = SCIE_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Science Scores\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\nThe following graph shows the difference in scores per subject based on the student’s gender.\n\nMathReadingScience\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = Gender, y = MATH_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Math Scores by Gender\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = Gender, y = READ_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Reading Scores by Gender\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes (x = Gender, y = SCIE_Score))+\n  geom_boxplot(notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"maroon\", size=2)+\n  ggtitle(\"Science Scores by Gender\")+\n  theme_hc()+\n  coord_cartesian(ylim = c(100, 900))+\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\nThe following graph shows the range of the average score per subject per school.\n\nObtaining Average Scores per School per SubjectMathReadingScience\n\n\n\nGet_School &lt;- stu_qqq_SG_filtered\n\nBy_School &lt;- Get_School %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarize(\n    Avg_Math = mean(MATH_Score, na.rm = TRUE),\n    Avg_Read = mean(READ_Score, na.rm = TRUE),\n    Avg_Scie = mean(SCIE_Score, na.rm = TRUE)\n  )\n\n\n\n\n\nShow the code\nggplot(data = By_School,\n       aes(x = factor(1), y = Avg_Math)) +\n  geom_boxplot(notch = TRUE) +\n  stat_summary(geom = \"point\", fun.y = \"mean\", colour = \"maroon\", size = 2) +\n  ggtitle(\"Math Scores by School\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(300, 750)) +\n  scale_y_continuous(breaks = seq(300, 750, by = 50)) +\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = By_School,\n       aes(x = factor(1), y = Avg_Read)) +\n  geom_boxplot(notch = TRUE) +\n  stat_summary(geom = \"point\", fun.y = \"mean\", colour = \"maroon\", size = 2) +\n  ggtitle(\"Reading Scores by School\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(300, 750)) +\n  scale_y_continuous(breaks = seq(300, 750, by = 50)) +\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = By_School,\n       aes(x = factor(1), y = Avg_Scie)) +\n  geom_boxplot(notch = TRUE) +\n  stat_summary(geom = \"point\", fun.y = \"mean\", colour = \"maroon\", size = 2) +\n  ggtitle(\"Science Scores by School\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(300, 750)) +\n  scale_y_continuous(breaks = seq(300, 750, by = 50)) +\n  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\nThe final graph shows the difference in scores per subject based on the student’s food security.\n\nMathReadingScience\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes(x=ESCS,y=MATH_Score))+\n  geom_point()+\n  geom_smooth(method=lm,\n              size=0.5)+\n  ggtitle(\"Math Score by ESCS\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes(x=ESCS,y=READ_Score))+\n  geom_point()+\n  geom_smooth(method=lm,\n              size=0.5)+\n  ggtitle(\"Reading Score by ESCS\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.title.y = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = stu_qqq_SG_filtered,\n       aes(x=ESCS,y=SCIE_Score))+\n  geom_point()+\n  geom_smooth(method=lm,\n              size=0.5)+\n  ggtitle(\"Science Score by ESCS\") +\n  theme_hc() +\n  coord_cartesian(ylim = c(100, 900)) +\n  scale_y_continuous(breaks = seq(100, 900, by = 100))+\n  theme(axis.title.y = element_blank())"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse, corrplot, ggstatsplot, seriation, dendextend, heatmaply, GGally, parallelPlot, treemap, treemapify)\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\n\n\n\n\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")\n\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\n\n\n\n\nwine.cor &lt;- cor(wine[, 1:11])\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n\n\n\n\n\n\n\n\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\nrow.names(wh) &lt;- wh$Country\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))\n\n\n\n\n\n\n\n\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)\n\n\n\n\n\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")\n\n\n\n\n\n\n\n\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\")\n\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  }
]